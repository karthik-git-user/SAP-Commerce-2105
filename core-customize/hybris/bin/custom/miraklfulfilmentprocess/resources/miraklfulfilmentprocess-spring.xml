<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2016 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
           
    <context:annotation-config/> 

	<!-- Listeners -->
	
	<bean id="pickupConfirmationEventListener" class="com.mirakl.hybris.fulfilmentprocess.listeners.PickupConfirmationEventListener" parent="abstractEventListener">
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	
	<!-- Process Adapters -->

	<alias name="mockProcess2WarehouseAdapter" alias="process2WarehouseAdapter"/>
	<bean id="mockProcess2WarehouseAdapter" class="com.mirakl.hybris.fulfilmentprocess.warehouse.MockProcess2WarehouseAdapter" >
		<property name="modelService" ref="modelService"/>
		<property name="warehouse2ProcessAdapter" ref="warehouse2ProcessAdapter"/>
		<property name="timeService" ref="timeService"/>
	</bean>

	<alias name="defaultWarehouse2ProcessAdapter" alias="warehouse2ProcessAdapter"/>
	<bean id="defaultWarehouse2ProcessAdapter" class="com.mirakl.hybris.fulfilmentprocess.warehouse.DefaultWarehouse2ProcessAdapter" >
		<property name="modelService" ref="modelService"/>
		<property name="statusMap">
			<map key-type="de.hybris.platform.warehouse.WarehouseConsignmentStatus" value-type="de.hybris.platform.commerceservices.enums.WarehouseConsignmentState">
				<entry key="CANCEL" value="CANCEL"/>
				<entry key="COMPLETE" value="COMPLETE"/>
				<entry key="PARTIAL" value="PARTIAL"/>
			</map>
		</property>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	
	<!-- Process Definitions -->

	<bean id="orderProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/miraklfulfilmentprocess/process/order-process.xml"/>
	</bean>

	<bean id="consignmentProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/miraklfulfilmentprocess/process/consignment-process.xml"/>
	</bean>
    
    <bean id="marketplaceConsignmentProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
        <property name="resource" value="classpath:/miraklfulfilmentprocess/process/marketplaceconsignment-process.xml"/>
    </bean>

	<!-- Process Actions -->

	<import resource="/miraklfulfilmentprocess/process/order-process-spring.xml"/>
	<import resource="/miraklfulfilmentprocess/process/consignment-process-spring.xml"/>
	<import resource="/miraklfulfilmentprocess/process/marketplaceconsignment-process-spring.xml"/>


	<!-- Order Check Service -->
	<!-- Performs some basic validation for the order as part of the first stage of the process. -->

	<alias name="defaultCheckOrderService" alias="checkOrderService"/>
	<bean id="defaultCheckOrderService" class="com.mirakl.hybris.fulfilmentprocess.impl.DefaultCheckOrderService" />
	
	<!-- Order Splitting -->
	<alias name="miraklfulfilmentprocessOrderSplittingService" alias="orderSplittingService"/>
	<bean id="miraklfulfilmentprocessOrderSplittingService" parent="defaultOrderSplittingService" >
		<property name="strategiesList">
			<list>
				<ref bean="splitByAvailableCount"/>
				<ref bean="splitByDeliveryMode" />
				<ref bean="splitByPoS" />
				<ref bean="splitByNamedDeliveryDate" />
				<ref bean="splitByEntryDeliveryAddress" />
				<ref bean="splitByWarehouse" />
			</list>
		</property>
	</bean>
	
	<!-- Split Strategies -->
	
	<alias name="defaultSplitByPoS" alias="splitByPoS"/>
	<bean id="defaultSplitByPoS" class="com.mirakl.hybris.fulfilmentprocess.strategy.impl.SplitByPoS" />
	
	<alias name="defaultSplitByEntryDeliveryAddress" alias="splitByEntryDeliveryAddress"/>
	<bean id="defaultSplitByEntryDeliveryAddress" class="com.mirakl.hybris.fulfilmentprocess.strategy.impl.SplitByEntryDeliveryAddress"  />
	
	<alias name="defaultSplitByDeliveryMode" alias="splitByDeliveryMode"/>
	<bean id="defaultSplitByDeliveryMode" class="com.mirakl.hybris.fulfilmentprocess.strategy.impl.SplitByDeliveryMode" >
		<property name="pickupDeliveryModeDao" ref="pickupDeliveryModeDao"/>
	</bean>
	
	<alias name="defaultSplitByAvailableCount" alias="splitByAvailableCount"/>
	<bean id="defaultSplitByAvailableCount" class="com.mirakl.hybris.fulfilmentprocess.strategy.impl.SplitByAvailableCount" >
		<property name="commerceStockService" ref="commerceStockService"/>
	</bean>
	
	<alias name="defaultSplitByWarehouse" alias="splitByWarehouse"/>
	<bean id="defaultSplitByWarehouse" class="com.mirakl.hybris.fulfilmentprocess.strategy.impl.SplitByWarehouse" />
	
	<!--  Jobs -->
	
	<bean id="cleanUpFraudOrderJob" class="com.mirakl.hybris.fulfilmentprocess.jobs.CleanUpFraudOrderJob"  >
		<property name="modelService" ref="modelService"/>
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
		<property name="sessionService" ref="sessionService"/>
	</bean>
        
        
    <!--     Implementations to be used in a not shared Mirakl environment (pprod, prod,..) -->
    <beans profile="!dev">
        <bean id="defaultRetrieveConsignmentUpdatesJob" class="com.mirakl.hybris.fulfilmentprocess.jobs.MiraklRetrieveConsignmentUpdatesJob" parent="abstractJobPerformable">
            <property name="miraklFrontApi" ref="mmpFrontApiClient"/>
            <property name="marketplaceConsignmentService" ref="marketplaceConsignmentService"/>
            <property name="configurationService" ref="configurationService"/>
        </bean>
    </beans>
        
    <!--     Implementations to be used in a shared Mirakl environment (dev,..) where unkown orders related items can be received   -->
    <beans profile="dev">
        <bean id="defaultRetrieveConsignmentUpdatesJob" class="com.mirakl.hybris.fulfilmentprocess.jobs.MiraklRetrieveConsignmentUpdatesIgnoreUnknownJob" parent="abstractJobPerformable">
            <property name="miraklFrontApi" ref="mmpFrontApiClient"/>
            <property name="marketplaceConsignmentService" ref="marketplaceConsignmentService"/>
            <property name="configurationService" ref="configurationService"/>
        </bean>
    </beans>
    
	
</beans>
